---
name: "helm-deploy-action"
description: "The deployment process for component"
inputs:
  aws_region:
    description: "The AWS region to deploy to"
    required: true
  chart_name:
    description: "The name of the chart to deploy "
    required: true
  chart_version:
    description: "The version of the chart to deploy "
    required: true
  clean_up:
    description: "Tell Helm to clean up failed deployment. Disable only while debugging deployment issue."
    required: false
    default: "true"
  cluster_name:
    description: "The name of the cluster"
    required: true
  component_name:
    description: "The name of the component being deployed, it is the helm release name;
                  it also serves as the default base name for the kubernetes namespace. "
    required: true
  dry_run:
    description: "Set to true to perform a helm dry-run deployment"
    required: false
    default: "false"
  environment:
    description: "Value for Helm global.environment"
    required: false
    deprecationMessage: "The value is not used anymore"
    default: ""
  github_token:
    description: "The authentication token"
    required: true
  helm_registry:
    description: "The registry to retrieve Helm charts from"
    required: true
  namespace:
    description: "The name of the namespace to deploy to. It defaults to <purpose>-<component_name>."
    required: false
    default: ""
  purpose:
    description: "The purpose in the deployment pipeline (dev, prod, ...)"
    required: true
  timeout:
    description: "time to wait for the deployment to succeed (a Go duration, default 5m0s)"
    required: false
    default: "5m0s"
  value_file:
    description: "name of a file containing additional values for helm"
    required: false
    default: ""
  verbose:
    description: "enable verbose output"
    required: false
    default: "false"
runs:
  using: "docker"
  image: "Dockerfile"
  args:
    - "AWS_REGION=${{ inputs.aws_region }}"
    - "CHART_NAME=${{ inputs.chart_name }}"
    - "CHART_VERSION=${{ inputs.chart_version }}"
    - "CLEAN_UP=${{ inputs.clean_up }}"
    - "CLUSTER_NAME=${{ inputs.cluster_name }}"
    - "COMPONENT_NAME=${{ inputs.component_name }}"
    - "DRY_RUN=${{ inputs.dry_run }}"
    - "ENVIRONMENT=${{ inputs.environment }}"
    - "GITHUB_TOKEN=${{ inputs.github_token }}"
    - "HELM_REGISTRY=${{ inputs.helm_registry }}"
    - "NAMESPACE=${{ inputs.namespace && inputs.namespace || format('{0}-{1}', inputs.purpose, inputs.module_name ) }}"
    - "PURPOSE=${{ inputs.purpose }}"
    - "TIMEOUT=${{ inputs.timeout }}"
    - "VALUE_FILE=${{ inputs.value_file }}"
    - "VERBOSE=${{ inputs.verbose }}"
